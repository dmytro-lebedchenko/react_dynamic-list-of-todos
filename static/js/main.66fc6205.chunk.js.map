{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","clickedTodo","onClickTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","value","onQuery","onFilter","useState","searchQuery","setSearchQuery","onChange","e","placeholder","target","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","useEffect","userId","currentUser","href","email","name","App","setTodos","setClickedTodo","query","setQuery","sortType","setSortType","loading","setLoading","hasError","setHasError","isInitialized","setIsInitialized","getTodoList","todosFromServer","a","todoList","getFilteredTodos","useCallback","todosList","length","filter","normalizedBase","toLowerCase","normalizedQuery","trim","currentQuery","includes","filteredTodos","useMemo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66fc6205.chunk.js","sourcesContent":["import React from 'react';\nimport className from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  clickedTodo: Todo | null;\n  onClickTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = (\n  { todos, clickedTodo, onClickTodo },\n) => (\n  <table\n    className=\"\n      table\n      is-narrow\n      is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          className={className(\n            clickedTodo?.id === todo.id\n              ? 'has-background-info-light'\n              : '',\n          )}\n          data-cy=\"todo\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n\n          <td\n            className=\"is-vcentered\"\n          >\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={className(\n                !todo.completed\n                  ? 'has-text-danger'\n                  : 'has-text-success',\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onClickTodo(todo)}\n            >\n              <span className=\"icon\">\n                {clickedTodo?.id === todo.id\n                  ? <i className=\"far fa-eye-slash\" />\n                  : <i className=\"far fa-eye\" />}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { ChangeEvent, useState } from 'react';\n\ninterface Props {\n  value: string;\n  onQuery: (e: string) => void;\n  onFilter: (e: ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = (\n  { value, onQuery, onFilter },\n) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => onFilter(e)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p\n        className=\"\n          control\n          is-expanded\n          has-icons-left\n          has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={(e) => {\n            onQuery(e.target.value);\n            setSearchQuery(e.target.value);\n          }}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ninterface Props {\n  clickedTodo: Todo;\n  onClickTodo: (todo: null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ clickedTodo, onClickTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(clickedTodo.userId)\n      .then(currentUser => setUser(currentUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"\n                modal-card-title\n                has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${clickedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClickTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {clickedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {clickedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                ) : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useState, useEffect, useCallback, useMemo, ChangeEvent,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [clickedTodo, setClickedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [sortType, setSortType] = useState('all');\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  const getTodoList = async (todosFromServer: Promise<Todo[]>) => {\n    setLoading(true);\n    setHasError(false);\n\n    try {\n      const todoList = await todosFromServer;\n\n      setTodos(todoList);\n      setIsInitialized(true);\n      setLoading(false);\n    } catch {\n      setHasError(true);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodoList(getTodos());\n  }, []);\n\n  const getFilteredTodos = useCallback((todosList: Todo[]) => {\n    if (!todosList.length) {\n      return [];\n    }\n\n    return todosList.filter(todo => {\n      const normalizedBase = todo.title.toLowerCase();\n      const normalizedQuery = query.toLowerCase().trim();\n      const currentQuery = normalizedBase.includes(normalizedQuery);\n\n      switch (sortType) {\n        case 'active':\n          return !todo.completed && currentQuery;\n\n        case 'completed':\n          return todo.completed && currentQuery;\n\n        default:\n        case 'all':\n          return todo && currentQuery;\n      }\n    });\n  }, [sortType, query]);\n\n  const groupByStatus = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSortType(e.target.value);\n    getFilteredTodos(todos);\n  };\n\n  const filteredTodos = useMemo(() => (\n    getFilteredTodos(todos)\n  ), [todos, query, sortType]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">\n              Todos:\n            </h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                value={query}\n                onQuery={setQuery}\n                onFilter={groupByStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {isInitialized && (\n                <TodoList\n                  todos={filteredTodos}\n                  clickedTodo={clickedTodo}\n                  onClickTodo={setClickedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {clickedTodo && (\n        <TodoModal\n          clickedTodo={clickedTodo}\n          onClickTodo={setClickedTodo}\n        />\n      )}\n\n      {hasError && (\n        <div\n          className=\"\n            container\n            box\n            notification\n            is-danger\n            is-light\"\n        >\n          Oh, no! Error during loading data from server!\n        </div>\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}